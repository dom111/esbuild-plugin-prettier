{
  "version": 3,
  "sources": ["../src/Prettier.ts"],
  "sourcesContent": ["import { Loader, OnLoadArgs, OnLoadResult, Plugin, PluginBuild } from 'esbuild';\nimport { Options, check, format, getFileInfo, resolveConfig } from 'prettier';\nimport { promises } from 'fs';\n\nconst NAMESPACE = 'esbuild-plugin-prettier';\n\nexport type PrettierOptions = Options & {\n  filter?: RegExp;\n  write?: boolean;\n  loader?: (path: string) => Loader;\n};\n\nconst prettierOptions: PrettierOptions = {\n  // Whether or not to write the changes to the filesystem.\n  write: true,\n  // The filter for files to format with prettier.\n  filter: /\\.([tj]sx?|s?css)$/,\n  // Returns the loader for esbuild to use.\n  loader: (path: string): Loader => path.split(/\\./).pop() as Loader,\n};\n\nexport class Prettier implements Plugin {\n  public name: string = NAMESPACE;\n\n  constructor(options: PrettierOptions = {}) {\n    Object.assign(prettierOptions, options);\n  }\n\n  setup({ onLoad }: PluginBuild): void {\n    const { write, filter, loader, ...otherOptions } = prettierOptions;\n\n    onLoad(\n      {\n        filter,\n      },\n      async ({ path }: OnLoadArgs): Promise<OnLoadResult> => {\n        const { ignored, inferredParser: parser } = await getFileInfo(path, {\n            resolveConfig: true,\n          }),\n          options = Object.assign(\n            {\n              parser,\n            },\n            await resolveConfig(path),\n            otherOptions\n          ),\n          warnings = [];\n\n        let contents = await promises.readFile(path, 'utf8');\n\n        if (!ignored && !check(contents, options)) {\n          if (write) {\n            contents = format(contents, options);\n            promises.writeFile(path, contents);\n          } else {\n            warnings.push({\n              pluginName: NAMESPACE,\n              text: `'${path}' requires formatting.`,\n            });\n          }\n        }\n\n        return {\n          pluginName: NAMESPACE,\n          warnings,\n          contents,\n          loader: loader(path),\n        };\n      }\n    );\n  }\n}\n\nexport default Prettier;\n"],
  "mappings": "8gBAAA,6CACA,MAAmE,oBACnE,EAAyB,cAEzB,KAAM,GAAY,0BAQZ,EAAmC,CAEvC,MAAO,GAEP,OAAQ,qBAER,OAAQ,AAAC,GAAyB,EAAK,MAAM,MAAM,OAG9C,OAAiC,CAGtC,YAAY,EAA2B,GAAI,CAFpC,UAAe,EAGpB,OAAO,OAAO,EAAiB,GAGjC,MAAM,CAAE,UAA6B,CACnC,KAAM,CAAE,QAAO,SAAQ,YAAW,GAAiB,EAEnD,EACE,CACE,UAEF,MAAO,CAAE,UAA8C,CACrD,KAAM,CAAE,UAAS,eAAgB,GAAW,KAAM,kBAAY,EAAM,CAChE,cAAe,KAEjB,EAAU,OAAO,OACf,CACE,UAEF,KAAM,oBAAc,GACpB,GAEF,EAAW,GAEb,GAAI,GAAW,KAAM,YAAS,SAAS,EAAM,QAE7C,MAAI,CAAC,GAAW,CAAC,YAAM,EAAU,IAC/B,CAAI,EACF,GAAW,aAAO,EAAU,GAC5B,WAAS,UAAU,EAAM,IAEzB,EAAS,KAAK,CACZ,WAAY,EACZ,KAAM,IAAI,6BAKT,CACL,WAAY,EACZ,WACA,WACA,OAAQ,EAAO,OAOzB,GAAO,GAAQ",
  "names": []
}
